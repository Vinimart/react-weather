{"version":3,"sources":["components/ApiKey.js","components/GetApi.js","components/WeatherMain/LocationBox.js","components/WeatherMain/WeatherBox.js","components/WeatherMain.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","key","base","GetApi","ApiKey","lang","unit","query","fetch","this","response","json","data","React","Component","LocationBox","newDate","Date","toLocaleString","year","month","weekday","day","date","charAt","toUpperCase","slice","className","props","city","country","getDate","WeatherBox","metric","temp","desc","WeatherMain","getApi","state","value","handleChange","bind","keyPress","fetchApi","bg","setBackground","classList","app","length","remove","item","add","e","setState","target","keyCode","prevQuery","fetchWeather","then","res","weather","name","sys","Math","round","main","description","document","querySelector","changeBackground","forceUpdate","catch","alert","type","autoFocus","placeholder","onKeyDown","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88d03fa4.chunk.js","sourcesContent":["const apiKey = {\r\n\tkey: \"2f66048c0472a33ffb7149e006c911b5\",\r\n\tbase: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nexport default apiKey;\r\n","import React from \"react\";\r\nimport ApiKey from \"./ApiKey\";\r\n\r\nexport default class GetApi extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.key = ApiKey.key;\r\n\t\tthis.base = ApiKey.base;\r\n\t\t// this.query = \"Brasília\";\r\n\t\tthis.lang = \"pt_br\";\r\n\t\tthis.unit = \"metric\";\r\n\t}\r\n\r\n\tasync fetchWeather(query) {\r\n\t\tconst response = await fetch(`${this.base}weather?q=${query}&lang=${this.lang}&units=${this.unit}&appid=${this.key}`);\r\n\t\tconst data = await response.json();\r\n\t\treturn data;\r\n\t}\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class LocationBox extends React.Component {\r\n\tgetDate() {\r\n\t\tconst locale = \"pt-br\";\r\n\t\tconst option = {\r\n\t\t\tyear: \"numeric\",\r\n\t\t\tmonth: \"short\",\r\n\t\t\tweekday: \"long\",\r\n\t\t\tday: \"numeric\",\r\n\t\t};\r\n\t\tconst newDate = new Date().toLocaleString(locale, option);\r\n\t\tthis.date = newDate.charAt(0).toUpperCase() + newDate.slice(1);\r\n\t\treturn this.date;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"location-box\">\r\n\t\t\t\t<div className=\"location\">\r\n\t\t\t\t\t{this.props.city}, {this.props.country}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"date\">{this.getDate()}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class WeatherBox extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n        this.metric = \"°C\";\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"weather-box\">\r\n\t\t\t\t<div className=\"temp\">{`${this.props.temp}${this.metric}`}</div>\r\n\t\t\t\t<div className=\"weather\">{this.props.desc}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport GetApi from \"./GetApi\";\r\nimport LocationBox from \"./WeatherMain/LocationBox\";\r\nimport WeatherBox from \"./WeatherMain/WeatherBox\";\r\n\r\nexport default class WeatherMain extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.getApi = new GetApi();\r\n\t\tthis.state = { value: \"Itajaí\" };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.keyPress = this.keyPress.bind(this);\r\n\t\tthis.fetchApi();\r\n\t}\r\n\r\n\tchangeBackground(temp) {\r\n\t\tthis.bg = \"warm\";\r\n\r\n\t\tswitch (true) {\r\n\t\t\tcase temp <= 10:\r\n\t\t\t\tthis.bg = \"cold\";\r\n\t\t\t\tthis.setBackground(this.bg);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase temp >= 11 && temp <= 25:\r\n\t\t\t\tthis.bg = \"warm\";\r\n\t\t\t\tthis.setBackground(this.bg);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase temp >= 26 && temp <= 30:\r\n\t\t\t\tthis.bg = \"hot\";\r\n\t\t\t\tthis.setBackground(this.bg);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase temp >= 31:\r\n\t\t\t\tthis.bg = \"hotter\";\r\n\t\t\t\tthis.setBackground(this.bg);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis.setBackground(this.bg);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tsetBackground(bg) {\r\n\t\tconst classList = this.app.classList;\r\n\t\twhile (classList.length > 1) {\r\n\t\t\tclassList.remove(classList.item(1));\r\n\t\t}\r\n\t\tthis.app.classList.add(bg);\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tthis.setState({ value: e.target.value });\r\n\t}\r\n\r\n\tkeyPress(e) {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\tif (this.prevQuery === this.state.value) {\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tthis.fetchApi();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfetchApi() {\r\n\t\tthis.getApi\r\n\t\t\t.fetchWeather(this.state.value)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.weather = {\r\n\t\t\t\t\tcity: res.name,\r\n\t\t\t\t\tcountry: res.sys.country,\r\n\t\t\t\t\ttemp: Math.round(res.main.temp),\r\n\t\t\t\t\tdesc: res.weather[0].description,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.prevQuery = this.state.value;\r\n\t\t\t\tthis.app = document.querySelector(\".App\");\r\n\t\t\t\tthis.changeBackground(this.weather.temp);\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\talert(\"Por favor, insira uma localização válida\");\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"weather-container\">\r\n\t\t\t\t<div className=\"search-box\">\r\n\t\t\t\t\t<input type=\"text\" className=\"search-bar\" autoFocus placeholder=\"Insira uma localização e pressione 'enter'\" value={this.state.value} onKeyDown={this.keyPress} onChange={this.handleChange}></input>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{this.weather ? (\r\n\t\t\t\t\t<div className=\"weather-main\">\r\n\t\t\t\t\t\t<LocationBox city={this.weather.city} country={this.weather.country} />\r\n\t\t\t\t\t\t<WeatherBox temp={this.weather.temp} desc={this.weather.desc} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\"\")}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import WeatherMain from \"./components/WeatherMain\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<main>\n\t\t\t\t<WeatherMain />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}