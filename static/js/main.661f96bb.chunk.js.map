{"version":3,"sources":["assets/preloader.svg","components/ApiKey.js","components/GetApi.js","components/WeatherMain/LocationBox.js","components/WeatherMain/WeatherBox.js","components/WeatherMain.js","components/Preloader.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","key","base","GetApi","ApiKey","lang","unit","query","fetch","this","response","json","data","React","Component","LocationBox","newDate","Date","toLocaleString","year","month","weekday","day","date","charAt","toUpperCase","slice","className","props","city","country","getDate","WeatherBox","temp","desc","WeatherMain","getApi","state","value","handleChange","bind","keyPress","fetchApi","app","document","querySelector","bg","setBackground","classList","length","remove","item","add","e","setState","target","keyCode","prevQuery","fetchWeather","then","res","onLoaded","weather","name","sys","Math","round","main","description","changeBackground","forceUpdate","catch","console","warn","type","placeholder","onKeyDown","onChange","Preloader","hideLoader","setTimeout","preloader","style","display","id","ref","c","src","spinner","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.661f96bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"images/6aecb827c40d4e1bff9cdfff09b69e20-preloader.svg\";","// Free API from \"Open Weather\".\r\nconst apiKey = {\r\n\tkey: \"2f66048c0472a33ffb7149e006c911b5\",\r\n\tbase: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nexport default apiKey;\r\n","import React from \"react\";\r\nimport ApiKey from \"./ApiKey\";\r\n\r\n// Free API from \"Open Weather\".\r\nexport default class GetApi extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.key = ApiKey.key;\r\n\t\tthis.base = ApiKey.base;\r\n\t\tthis.lang = \"pt_br\";\r\n\t\tthis.unit = \"metric\";\r\n\t}\r\n\r\n\tasync fetchWeather(query) {\r\n\t\tconst response = await fetch(`${this.base}weather?q=${query}&lang=${this.lang}&units=${this.unit}&appid=${this.key}`);\r\n\t\tconst data = await response.json();\r\n\t\treturn data;\r\n\t}\r\n}\r\n","import React from \"react\";\r\n\r\n// City, country and date view\r\nexport default class LocationBox extends React.Component {\r\n\tgetDate() {\r\n\t\tconst locale = \"pt-br\";\r\n\t\tconst option = {\r\n\t\t\tyear: \"numeric\",\r\n\t\t\tmonth: \"short\",\r\n\t\t\tweekday: \"long\",\r\n\t\t\tday: \"numeric\",\r\n\t\t};\r\n\r\n\t\tconst newDate = new Date().toLocaleString(locale, option);\r\n\t\t\r\n\t\t// Capitalize string\r\n\t\tthis.date = newDate.charAt(0).toUpperCase() + newDate.slice(1);\r\n\t\treturn this.date;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"location-box\">\r\n\t\t\t\t<div className=\"location\">\r\n\t\t\t\t\t{this.props.city}, {this.props.country}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"date\">{this.getDate()}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\n\r\n// Temperature and climate description view\r\nexport default class WeatherBox extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n        this.unit = \"°C\";\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"weather-box\">\r\n\t\t\t\t<div className=\"temp\">{`${this.props.temp}${this.unit}`}</div>\r\n\t\t\t\t<div className=\"weather\">{this.props.desc}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport GetApi from \"./GetApi\";\r\nimport LocationBox from \"./WeatherMain/LocationBox\";\r\nimport WeatherBox from \"./WeatherMain/WeatherBox\";\r\n\r\n// MVC was not implemented in this project, but this class can be compared with a Controller Layer,\r\n// since most of the components of the project is managed by this class.\r\nexport default class WeatherMain extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.getApi = new GetApi();\r\n\r\n\t\t// API Initial query\r\n\t\tthis.state = { value: \"Itajaí\" };\r\n\r\n\t\t// Search Input event handlers\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.keyPress = this.keyPress.bind(this);\r\n\r\n\t\t// Calls the promise right at the initialization of the component.\r\n\t\tthis.fetchApi();\r\n\t}\r\n\r\n\t// Identifies the range of temperature values ​​and associates it with a background image through CSS classes.\r\n\tchangeBackground(temp) {\r\n\t\tthis.app = document.querySelector(\".App\");\r\n\t\tthis.bg = \"warm\";\r\n\r\n\t\tswitch (true) {\r\n\t\t\tcase temp <= 10:\r\n\t\t\t\tthis.bg = \"cold\";\r\n\t\t\t\tthis.setBackground(this.bg);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase temp >= 11 && temp <= 25:\r\n\t\t\t\tthis.bg = \"warm\";\r\n\t\t\t\tthis.setBackground(this.bg);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase temp >= 26 && temp <= 30:\r\n\t\t\t\tthis.bg = \"hot\";\r\n\t\t\t\tthis.setBackground(this.bg);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase temp >= 31:\r\n\t\t\t\tthis.bg = \"hotter\";\r\n\t\t\t\tthis.setBackground(this.bg);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis.setBackground(this.bg);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// This method checks the size of the classList and removes any class other than \"App\". \r\n\t// Soon afterwards it assigns the class referring to a background image.\r\n\t// This prevents classes from accumulating in the element's classList when there are background image changes\r\n\tsetBackground(bg) {\r\n\t\tconst classList = this.app.classList;\r\n\t\twhile (classList.length > 1) {\r\n\t\t\tclassList.remove(classList.item(1));\r\n\t\t}\r\n\t\tthis.app.classList.add(bg);\r\n\t}\r\n\r\n\t// Event handles:\r\n\t// Stores a string whenever the state of the input target value changes.\r\n\thandleChange(e) {\r\n\t\tthis.setState({ value: e.target.value });\r\n\t}\r\n\r\n\t// This method, in addition to handling the keyDown event of the input search, prevents multiple requests to \r\n\t// the API from happening when the same value is sent more than once in a row.\r\n\tkeyPress(e) {\r\n\t\t// \"Enter\" key\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\tif (this.prevQuery === this.state.value) {\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tthis.fetchApi();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Main method. Performs the HTTP request and handles the Promisse result.\r\n\tfetchApi() {\r\n\t\tthis.getApi\r\n\t\t\t.fetchWeather(this.state.value)\r\n\t\t\t.then((res) => {\r\n\t\t\t\t// Tells the Preloader component that the content is alredy loaded.\r\n\t\t\t\tthis.props.onLoaded();\r\n\r\n\t\t\t\t// Only the response data that will be used\r\n\t\t\t\tthis.weather = {\r\n\t\t\t\t\tcity: res.name,\r\n\t\t\t\t\tcountry: res.sys.country,\r\n\t\t\t\t\ttemp: Math.round(res.main.temp),\r\n\t\t\t\t\tdesc: res.weather[0].description,\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Stores the last result obtained through the HTTP request.\r\n\t\t\t\tthis.prevQuery = this.state.value;\r\n\r\n\t\t\t\t// Changes the background image.\r\n\t\t\t\tthis.changeBackground(this.weather.temp);\r\n\r\n\t\t\t\t// Forces a break in the component's life cycle in order to update the component's state with the data\r\n\t\t\t\t// obtained by the request.\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\tconsole.warn(\"Por favor, insira uma localização válida\");\r\n\t\t\t});\r\n\t}\r\n\r\n\t// The LocationBox and WeatherBox components will only be rendered when there is a positive response from Promisse.\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"weather-container\">\r\n\t\t\t\t<div className=\"search-box\">\r\n\t\t\t\t\t<input type=\"text\" className=\"search-bar\" placeholder=\"Insira uma localização e pressione 'enter'\" value={this.state.value} onKeyDown={this.keyPress} onChange={this.handleChange}></input>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{this.weather ? (\r\n\t\t\t\t\t<div className=\"weather-main\">\r\n\t\t\t\t\t\t<LocationBox city={this.weather.city} country={this.weather.country} />\r\n\t\t\t\t\t\t<WeatherBox temp={this.weather.temp} desc={this.weather.desc} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\"\"\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport spinner from \"../assets/preloader.svg\";\r\nimport WeatherMain from \"./WeatherMain\";\r\n\r\nexport default class Preloader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.hideLoader = this.hideLoader.bind(this);\r\n    }\r\n\r\n    // Hide the preloader when the page is loaded.\r\n    // SetTimeout is used here to ensure that the background image of the page is completely loaded.\r\n    hideLoader() {\r\n        setTimeout(() => {\r\n            this.preloader.style.display = \"none\";\r\n        }, 1000);\r\n    }\r\n\r\n    // Render the WeatherMain components when the page is fully loaded.\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div\r\n                    id=\"preloader\"\r\n                    className=\"preloader\"\r\n                    ref={(c) => {\r\n                        this.preloader = c;\r\n                    }}>\r\n                    <img src={spinner} alt=\"preloader\"></img>\r\n                </div>\r\n\r\n                <WeatherMain onLoaded={this.hideLoader} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport Preloader from \"./components/Preloader\";\n\n// The Preloader component is the first component to be rendered in the page\n// due React components \"top to bottom\" workflow.\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<main>\n\t\t\t\t<Preloader />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}